// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UtilityAccountManager.Data;

#nullable disable

namespace UtilityAccountManager.Data.Migrations
{
    [DbContext(typeof(UtilityAccountContext))]
    [Migration("20240515130834_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("UtilityAccountManager.Data.Models.AddressModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("FlatNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Zipcode")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("UtilityAccountManager.Data.Models.ResidentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Residents");
                });

            modelBuilder.Entity("UtilityAccountManager.Data.Models.ResidentUtilityAccountModel", b =>
                {
                    b.Property<int>("ResidentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UtilityAccountNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("ResidentId", "UtilityAccountNumber");

                    b.HasIndex("UtilityAccountNumber");

                    b.ToTable("ResidentUtilityAccounts");
                });

            modelBuilder.Entity("UtilityAccountManager.Data.Models.UtilityAccountModel", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<int>("AddressId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Area")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("UtilityAccounts");
                });

            modelBuilder.Entity("UtilityAccountManager.Data.Models.ResidentUtilityAccountModel", b =>
                {
                    b.HasOne("UtilityAccountManager.Data.Models.ResidentModel", "Resident")
                        .WithMany("ResidentUtilityAccounts")
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UtilityAccountManager.Data.Models.UtilityAccountModel", "UtilityAccount")
                        .WithMany("ResidentUtilityAccounts")
                        .HasForeignKey("UtilityAccountNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resident");

                    b.Navigation("UtilityAccount");
                });

            modelBuilder.Entity("UtilityAccountManager.Data.Models.UtilityAccountModel", b =>
                {
                    b.HasOne("UtilityAccountManager.Data.Models.AddressModel", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("UtilityAccountManager.Data.Models.ResidentModel", b =>
                {
                    b.Navigation("ResidentUtilityAccounts");
                });

            modelBuilder.Entity("UtilityAccountManager.Data.Models.UtilityAccountModel", b =>
                {
                    b.Navigation("ResidentUtilityAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
